<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Airflights</name>
    </assembly>
    <members>
        <member name="M:Airflights.Controllers.AuthController.#ctor(AirflightsDomain.Services.IUserService,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            конструктор - точка входа внедрения сервисов
            </summary>
            <param name="usersService">сервис для пользователей</param>
            <param name="config">для получение конфиг данных с appsettings</param>
        </member>
        <member name="T:Airflights.Controllers.FlightsController">
            <summary>
            рейсы
            </summary>
        </member>
        <member name="M:Airflights.Controllers.FlightsController.#ctor(AirflightsDomain.Services.IFlightsService)">
            <summary>
            конструктор - точка входа внедрения сервисов
            </summary>
            <param name="flightsService">сервис для рейсов</param>
        </member>
        <member name="M:Airflights.Controllers.FlightsController.Get">
            <summary>
            получить все рейсы
            </summary>
            <returns></returns>
        </member>
        <member name="M:Airflights.Controllers.FlightsController.GetFiltered(AirflightsDomain.Models.Flight.FlightFilterRequestDTO)">
            <summary>
            получить рейсы по фильтру
            </summary>
            <returns></returns>
        </member>
        <member name="M:Airflights.Controllers.FlightsController.Get(System.Int32)">
            <summary>
            получить рейс по id
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Airflights.Controllers.FlightsController.Put(AirflightsDomain.Models.Flight.CreateFlightDTO)">
            <summary>
            создание
            </summary>
            <param name="flight"></param>
            <returns></returns>
        </member>
        <member name="M:Airflights.Controllers.FlightsController.Patch(AirflightsDomain.Models.Flight.UpdateFlightDTO)">
            <summary>
            редактирование
            </summary>
            <param name="flight"></param>
            <returns></returns>
        </member>
        <member name="M:Airflights.Controllers.FlightsController.PatchDelay(AirflightsDomain.Models.Flight.UpdateFlightDelayDTO)">
            <summary>
            редактировать задержку 
            </summary>
            <param name="flight"></param>
            <returns></returns>
        </member>
        <member name="M:Airflights.Controllers.FlightsController.Delete(System.Int32)">
            <summary>
            удаление
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Airflights.Controllers.UsersController.#ctor(AirflightsDomain.Services.IUserService)">
            <summary>
            конструктор - точка входа внедрения сервисов
            </summary>
            <param name="usersService">сервис для пользователей</param>
        </member>
        <member name="M:Airflights.Controllers.UsersController.Put(AirflightsDomain.Models.User.CreateUserDTO)">
            <summary>
            создание нового пользователя
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="T:Airflights.Middlewares.RequestResponseLoggerMiddleware">
            <summary>
            middlware для логирования 
            </summary>
        </member>
        <member name="M:Airflights.Middlewares.RequestResponseLoggerMiddleware.#ctor(Microsoft.AspNetCore.Http.RequestDelegate,Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            
            </summary>
            <param name="next"></param>
            <param name="loggerFactory"></param>
        </member>
    </members>
</doc>
